apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "..serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ required ".Values.image.tag is required" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PREHOG_API_KEY
            valueFrom:
              secretKeyRef:
                name: posthog-api-key
                key: api-key
          args:
          - "-posthog-url"
          - {{ required ".Values.prehog.posthogURL is required to be set." .Values.prehog.posthogURL }}
          - "-cert"
          - "/certs/tls.crt"
          - "-key"
          - "/certs/tls.key"
          - "-diag-addr"
          - ":3000"
          - "-proxy-protocol"
          volumeMounts:
          - name: cert
            mountPath: "/certs"
            readOnly: true
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: diag
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              scheme: HTTPS
              port: https
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: cert
        secret:
          secretName: {{ required "certificate.secretName is required to be set." .Values.certificate.secretName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
